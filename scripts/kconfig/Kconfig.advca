#+++++++++++++++++++++++++++++++++++++++++++++++++++
menuconfig HI_ADVCA_SUPPORT
	bool "Advance CA Support"
	default n
#--------------------------------
choice
	prompt "Advance CA Type"
	depends on HI_ADVCA_SUPPORT
	default ADVCA_OTHER
config  ADVCA_CONAX
	bool "Conax"
config  ADVCA_NOVEL
	bool "Novel"
config  ADVCA_NAGRA
	bool "Nagra"
config  ADVCA_SUMA
	bool "Suma"
config  ADVCA_CTI
	bool "Cti"
config  ADVCA_VERIMATRIX
	bool "Verimatrix"
config  ADVCA_IRDETO
	bool "Irdeto"
config  ADVCA_PANACCESS
	bool "Panaccess"
config  ADVCA_DCAS
	bool "Dcas"
config  ADVCA_OTHER
	bool "Other"
endchoice

config  HI_ADVCA_TYPE
	string
	depends on HI_ADVCA_SUPPORT
	default CONAX           if ADVCA_CONAX
	default NOVEL           if ADVCA_NOVEL
	default NAGRA           if ADVCA_NAGRA
	default SUMA            if ADVCA_SUMA
	default CTI             if ADVCA_CTI
	default VERIMATRIX      if ADVCA_VERIMATRIX
	default IRDETO		if ADVCA_IRDETO
	default PANACCESS	if ADVCA_PANACCESS
	default DCAS		if ADVCA_DCAS
	default OTHER           if ADVCA_OTHER
#--------------------------------


menuconfig ADVCA_FUNCTION
	bool "Advance CA Function"
	depends on HI_ADVCA_SUPPORT && (ADVCA_CONAX || ADVCA_NAGRA)
	default n
	help
	  From now on,this option is only for Nagra and Conax CA.Some functions of SDK are disabled,especially those for debugging.

choice
	prompt "Advca Function"
	depends on ADVCA_FUNCTION
config  FUNCTION_FINAL
	bool "FINAL"
	select HI_ADVCA_SANDBOX_SUPPORT if !HI_LOADER_APPLOADER
	help
	  With this option selected,SDK can meets some security requirements of advanced CA listed below.
	  1.Useless drivers,modules and libraries are not allowed to be compiled.
	  2.Modules in kernel are not unloadable.
	  3.NFS is not supported.
	  4.No debugging method is supported.No debugging information outputs.
	  5.No user can log into system through shell.
config  FUNCTION_RELEASE
	bool "RELEASE"
	select HI_ADVCA_SANDBOX_SUPPORT if !HI_LOADER_APPLOADER
	help
	  With this option selected,functions below are added to FINAL version.
	  1.Allow communication through UART.
	  2.Allow user to log into system.
	  3.Allow user to run apps in command line.
config  FUNCTION_DEBUG
	bool "DEBUG"
	select HI_ADVCA_SANDBOX_SUPPORT if !HI_LOADER_APPLOADER
	help
	  With this option selected,functions below are added to RELEASE version.
	  1.NFS and telenet service are supported.
	  2.Printf and printk are allowed to output information.
	  3.Himd and himm can be used to check and modify data in RAM.
	  4.All commands in busybox are provided.
	  5.System information can be gotten through proc file system.
endchoice

config  HI_ADVCA_FUNCTION
	string
	depends on ADVCA_FUNCTION
	default DEBUG       if FUNCTION_DEBUG
	default RELEASE     if FUNCTION_RELEASE
	default FINAL       if FUNCTION_FINAL

config HI_STATIC_LIB_ONLY
	bool
	default y
	depends on ADVCA_FUNCTION

config HI_ADVCA_VERIFY_ENABLE
	bool "Advca verify enable"
	depends on HI_ADVCA_SUPPORT
	help
	  If you want to enable boot to verify other images (kernel,loader,rootfs and so on), say y.

config HI_ADVCA_VMX_3RD_SIGN
    bool "Verimatrix Third-Party Sign Solution"
    depends on (HI_ADVCA_SUPPORT && ADVCA_VERIMATRIX)
	default n
    help
      If you want to enable verimatrix third-party signing solution, say y.

config HI_ADVCA_USE_EXT1_RSA_KEY
	bool "Verify with ext1_rsa_key"
	depends on HI_ADVCA_SUPPORT && ADVCA_CONAX
	default n
	help
	  If the boot verify other images (kernel,loader,rootfs and so on) with the ext1_rsa_key which is stored in the key area of signed boot image, say y.
	  If this option is not selected, the boot will verify other images with the ext2_rsa_key in bootcode.
	  Please refer to source/boot/product/driver/advca/common/auth/ca_config.c for ext2_rsa_key.
#--------------------------------
menuconfig HI_ADVCA_SANDBOX_SUPPORT
	bool "Support Advance CA Sandbox"
	depends on HI_ADVCA_SUPPORT
	default y
	
choice
	prompt "CA Sandbox Type"
	depends on HI_ADVCA_SANDBOX_SUPPORT
	default SANDBOX_CHROOT
config  SANDBOX_CHROOT
	bool "Chroot"
	select HI_TOOL_SANDBOX_SUPPORT
config  SANDBOX_LXC
	bool "LXC"
	select HI_LXC_CONTAINER_SUPPORT

endchoice

config  HI_ADVCA_SANDBOX_TYPE
	string
	depends on HI_ADVCA_SANDBOX_SUPPORT
	default CHROOT        if SANDBOX_CHROOT
	default LXC           if SANDBOX_LXC

#--------------------------------
